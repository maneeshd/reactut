!function(e){function t(t){for(var o,l,i=t[0],u=t[1],s=t[2],d=0,f=[];d<i.length;d++)l=i[d],r[l]&&f.push(r[l][0]),r[l]=0;for(o in u)Object.prototype.hasOwnProperty.call(u,o)&&(e[o]=u[o]);for(c&&c(t);f.length;)f.shift()();return a.push.apply(a,s||[]),n()}function n(){for(var e,t=0;t<a.length;t++){for(var n=a[t],o=!0,i=1;i<n.length;i++){var u=n[i];0!==r[u]&&(o=!1)}o&&(a.splice(t--,1),e=l(l.s=n[0]))}return e}var o={},r={0:0},a=[];function l(t){if(o[t])return o[t].exports;var n=o[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,l),n.l=!0,n.exports}l.m=e,l.c=o,l.d=function(e,t,n){l.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},l.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},l.t=function(e,t){if(1&t&&(e=l(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(l.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)l.d(n,o,function(t){return e[t]}.bind(null,o));return n},l.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return l.d(t,"a",t),t},l.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},l.p="/static/js/";var i=window.webpackJsonp=window.webpackJsonp||[],u=i.push.bind(i);i.push=t,i=i.slice();for(var s=0;s<i.length;s++)t(i[s]);var c=u;a.push([9,1]),n()}({22:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),r=c(n(0)),a=c(n(23)),l=c(n(24)),i=c(n(26)),u=c(n(27)),s=c(n(28));function c(e){return e&&e.__esModule?e:{default:e}}a.default.defaultProps={title:"Indecision?"};var d=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={options:[],selectedOption:void 0},n.handleAddOption=n.handleAddOption.bind(n),n.handleRemoveAll=n.handleRemoveAll.bind(n),n.handleRemoveOne=n.handleRemoveOne.bind(n),n.handlePickOne=n.handlePickOne.bind(n),n.closeOptionModal=n.closeOptionModal.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),o(t,[{key:"componentDidMount",value:function(){try{var e=localStorage.getItem("options"),t=JSON.parse(e);t&&this.setState(function(){return{options:t}})}catch(e){}}},{key:"componentDidUpdate",value:function(e,t){if(t.options.length!==this.state.options.length){var n=JSON.stringify(this.state.options);localStorage.setItem("options",n)}}},{key:"handleAddOption",value:function(e){return e?this.state.options.indexOf(e)>-1?r.default.createElement("span",null,r.default.createElement("b",null,"DuplicateOption:")," Option already exists"):void this.setState(function(t,n){return{options:t.options.concat([e])}}):r.default.createElement("span",null,r.default.createElement("b",null,"InvalidOption:")," Enter a valid value to add option")}},{key:"handleRemoveAll",value:function(){this.setState(function(){return{options:[]}})}},{key:"handleRemoveOne",value:function(e){this.setState(function(t){return{options:t.options.filter(function(t){return t!==e})}})}},{key:"handlePickOne",value:function(){var e=this,t=Math.floor(Math.random()*this.state.options.length);this.setState(function(){return{selectedOption:e.state.options[t]}})}},{key:"closeOptionModal",value:function(){this.setState(function(){return{selectedOption:void 0}})}},{key:"render",value:function(){return r.default.createElement("div",{className:"container w-50 shadow-lg p-2 text-center mt-4"},r.default.createElement(a.default,{subtitle:"Let the machine decide for you"}),r.default.createElement("hr",null),r.default.createElement(u.default,{hasOptions:this.state.options.length>0,handlePickOne:this.handlePickOne}),r.default.createElement(l.default,function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}({options:this.state.options,handleRemoveAll:this.handleRemoveAll,handleRemoveOne:this.handleRemoveOne},"handleRemoveOne",this.handleRemoveOne)),r.default.createElement(i.default,{handleAddOption:this.handleAddOption}),r.default.createElement(s.default,{selectedOption:this.state.selectedOption,closeOptionModal:this.closeOptionModal}))}}]),t}();t.default=d},23:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));t.default=function(e){return o.default.createElement("div",null,o.default.createElement("h1",null,e.title),e.subtitle&&o.default.createElement("p",{className:"lead"},e.subtitle))}},24:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(0)),r=a(n(25));function a(e){return e&&e.__esModule?e:{default:e}}t.default=function(e){return o.default.createElement("div",null,o.default.createElement("div",{className:"d-flex flex-column justify-content-center align-items-center"},o.default.createElement("div",{className:"mb-2 w-25 text-center text-wrap"},e.options.map(function(t){return o.default.createElement(r.default,{option:t,key:t,handleRemoveOne:e.handleRemoveOne})})),0===e.options.length&&o.default.createElement("p",null,"Please add an option to get started!"),o.default.createElement("button",{className:"btn btn-sm btn-danger btn-block w-25 shadow mb-2",onClick:e.handleRemoveAll,disabled:!e.options.length},"Remove All")))}},25:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));t.default=function(e){return o.default.createElement("div",null,o.default.createElement("span",{className:"font-weight-bold"},e.option),o.default.createElement("button",{className:"btn btn-xs btn-danger ml-2 font-weight-bold py-1 px-1","data-type":"minus",style:{fontSize:"10px"},onClick:function(t){e.handleRemoveOne(e.option)}},"-"))}},26:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(){function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(t,n,o){return n&&e(t.prototype,n),o&&e(t,o),t}}(),r=function(e){return e&&e.__esModule?e:{default:e}}(n(0));var a=function(e){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t);var n=function(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));return n.state={inputValue:"",error:void 0},n.formSubmitHandler=n.formSubmitHandler.bind(n),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}(t,r.default.Component),o(t,[{key:"formSubmitHandler",value:function(e){e.preventDefault();var t=e.target.elements.option.value.trim(),n=this.props.handleAddOption(t);this.setState({error:n}),n||this.setState({inputValue:""})}},{key:"render",value:function(){var e=this;return r.default.createElement("div",null,this.state.error&&r.default.createElement("div",{className:"alert alert-danger p-1 mt-2"},this.state.error),r.default.createElement("form",{className:"form-inline justify-content-center",id:"addOptionForm",onSubmit:this.formSubmitHandler},r.default.createElement("div",{className:"form-row"},r.default.createElement("div",{className:"col"},r.default.createElement("input",{className:"form-control shadow",type:"text",name:"option",value:this.state.inputValue,onChange:function(t){return e.setState({inputValue:t.target.value,error:void 0})}})),r.default.createElement("div",{className:"col"},r.default.createElement("button",{className:"form-control btn btn-success mb-2 shadow","data-type":"plus"},"Add Option")))))}}]),t}();t.default=a},27:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=function(e){return e&&e.__esModule?e:{default:e}}(n(0));t.default=function(e){return o.default.createElement("div",{className:"d-flex justify-content-center"},o.default.createElement("button",{className:"btn btn-primary mb-4 w-50 shadow btn-block font-weight-bold",onClick:e.handlePickOne,disabled:!e.hasOptions},"What should I do?"))}},28:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=a(n(0)),r=a(n(29));function a(e){return e&&e.__esModule?e:{default:e}}r.default.setAppElement(document.getElementById("app"));var l={content:{top:"50%",left:"50%",right:"auto",bottom:"auto",marginRight:"-50%",textAlign:"center",transform:"translate(-50%, -50%)"}};t.default=function(e){return o.default.createElement(r.default,{isOpen:!!e.selectedOption,contentLabel:"Selected Option",onRequestClose:e.closeOptionModal,style:l},o.default.createElement("h1",null,"Selected Option: ",e.selectedOption),o.default.createElement("button",{className:"btn btn-primary shadow-sm font-weight-bold",onClick:e.closeOptionModal},"OK, thanks."))}},40:function(e,t,n){var o=n(41);"string"==typeof o&&(o=[[e.i,o,""]]);var r={hmr:!0,transform:void 0,insertInto:void 0};n(3)(o,r);o.locals&&(e.exports=o.locals)},41:function(e,t,n){(e.exports=n(2)(!1)).push([e.i,"html, body {\r\n    margin: 0;\r\n    max-width: 100;\r\n    max-height: 100;\r\n    font-family: 'Open Sans', Helvetica, sans-serif;\r\n}\r\n\r\n.text-wrap {\r\n    word-wrap: break-word;\r\n}\r\n\r\n.btn-group-xs > .btn, .btn-xs {\r\n    padding  : .25rem .4rem;\r\n    font-size  : .875rem;\r\n    line-height  : .5;\r\n    border-radius : .2rem;\r\n}",""])},9:function(e,t,n){"use strict";n(10),n(12),n(15);var o=l(n(0)),r=l(n(5)),a=l(n(22));function l(e){return e&&e.__esModule?e:{default:e}}n(40),r.default.render(o.default.createElement(a.default,null),document.getElementById("app"))}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,